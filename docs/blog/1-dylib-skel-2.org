#+TITLE: dylib-skel (part 2)
* Overview
+ CODE :: [[https://lab.rwest.io/packy/stash/dysk][packy/stash/dysk]]
Welcome back! This is *part two* of a two part series on dynamic library loading. The
topic of this post is =Lisp -> Rust= FFI bindings. If you're interested in the opposite
scenario =Rust -> Lisp= or are unfamiliar with FFI fundamentals, check out the [[file:dylib-skel-1.org][previous
post]].
* basic
Same as before, we're starting with a basic example to test the waters.
* swank
[[https://www.cliki.net/SWANK#:~:text=Swank%20is%20distributed%20as%20part,for%20interacting%20with%20Common%20Lisp.][Swank]] is a wire protocol which is distributed with [[https://www.cliki.net/SLIME][SLIME]]. It provides access to a remote
lisp and is optimized for portability as well as its intended use-case (Emacs IDE
integration). It is quite a useful piece of software but isn't available as a
stand-alone library.

We're going to make a toy version of swank. It's developed in Lisp and compiled as a
shared library so that we can make use of the library in an FFI-compatible host language
(Rust). This leads to some interesting results.
