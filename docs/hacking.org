#+TITLE: hacking
#+OPTIONS: toc:nil num:nil title:nil author:nil
STYLE:
  space=2, line=88, kebab-case
  ~1024 line max for single-file pkg
  ~512 line max/file for multi-file pkg

  when in doubt, use google: https://google.github.io/styleguide/lispguide.xml

LAYOUT:
  - src/     : nas-t source tree
    - core     : core modules
    - proto    : protocol defs
    - platform : hardware support
  - tests/   : nas-t tests
  - docs/    : nas-t documentation
  - infra/   : infrastructure
    - auth     : web-auth service
    - style    : common style assets
    - shop     : shop.nas-t.net
      - proc     : stripe service
    - web      : nas-t.net
      - client   : wasm ui
      - server   : http server
    - releng   : release engineering

NOTES:
  - NAS-T's core langs are Common Lisp and Rust. We use the most recent
    stable versions of SBCL and the Rust compiler.

  - We use contrib libraries from SBCL throughout the codebase,
    other Common Lisp implementations are not supported.

  - The source is under Mercurial version control. If you wish to
    contribute your changes upstream, it is recommended to use the
    upstream source.

  - To load the Common Lisp systems you will need the following
    dependencies (not on quicklisp):
    - MACS  - https://lab.rwest.io/ellis/macs
    - SXP   - https://lab.rwest.io/ellis/sxp
    - ORGAN - https://lab.rwest.io/ellis/organ

  - The website code at infra/web requires the Trunk program for
  building the web assets which you can install with cargo.

  - GNU/Linux is the primary compile target for all software,
  but other Unix-like platforms are supported (MacOS).

  - Microsoft Windows is not supported.

  - Makefiles are terse.

  - We use Makefile double-colon rules to achieve target specialization.
    - https://ftp.gnu.org/old-gnu/Manuals/make-3.79.1/html_node/make_43.html
    - see infra/common.mk
